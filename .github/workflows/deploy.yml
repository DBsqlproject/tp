name: Build and Deploy Spring Boot to AWS EC2

on:  
  push:
    branches:
    - merge  
    
    #merge 브런치 push 될 때 실행      
env:
  PROJECT_NAME: dbsql_project
  BUCKET_NAME: my-cicd-bucket
  CODE_DEPLOY_APP_NAME: cicdapp
  DEPLOYMENT_GROUP_NAME: cicdapp_deploy
  
jobs: 
  build: 
    runs-on: ubuntu-latest 
    
    steps:
      - name: check out
        uses: actions/checkout@v2
        
      - name: Setup Java JDK 11
        uses: actions/setup-java@v1
        with:
           java-version: 11
           
        # application.properties 파일 생성
      - name: Make application.properties             
        run: |
          echo "spring.datasource.driver-class-name=${{ secrets.DATASOURCE_DRIVER_CLASS_NAME }}" >> src/main/resources/application.properties
          echo "spring.datasource.url=${{ secrets.DATASOURCE_URL }}" >> src/main/resources/application.properties
          echo "spring.datasource.username=${{ secrets.DATASOURCE_USERNAME }}" >> src/main/resources/application.properties
          echo "spring.datasource.password=${{ secrets.DATASOURCE_PASSWORD }}" >> src/main/resources/application.properties
          echo "" >> src/main/resources/application.properties
          echo "server.port=8080" >> src/main/resources/application.properties
          echo "" >> src/main/resources/application.properties   
          echo "spring.mvc.view.prefix=/WEB-INF/views/" >> src/main/resources/application.properties
          echo "spring.mvc.view.suffix=.jsp" >> src/main/resources/application.properties
        shell: bash

          
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
       
        
      - name: Build with Gradle
        run: ./gradlew war
        shell: bash
      
      - name: Make zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
       
       
